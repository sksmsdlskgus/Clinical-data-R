setwd("C:\Users\82102\Desktop\임데마\임데마 실습")# 데이터 가져오기
setwd("C:/Users/82102/Desktop/임데마/임데마 실습")# 데이터 가져오기
#csv 파일 불러오기
d1<-read.csv("htnw1.csv")
d2<-read.csv("htnw2.csv")
d3<-read.csv("htnw3.csv")
install.packages("dplyr")
library(dplyr)
# 빈도확인
install.packages("descr")
library(descr)
freq(m2$T_HTN)
#csv 파일 불러오기
h1<-read.csv("htnw1.csv")
h2<-read.csv("htnw2.csv")
h3<-read.csv("htnw3.csv")
View(d1)
View(d1)
m1<-left_join(h1,h2,by="T_ID")
m2<-left_join(m1,h3)
# 빈도확인
install.packages("descr")
install.packages("descr")
library(descr)
freq(m2$T_HTN)
#성별확인
freq(m2$T_SEX)
#결측확인
summary(m2$T_GLO0)
table(m2$T_INCOME)
#결측처리
# 기본코드 결측치 처리 (일괄)---
m2[m2 == 99999] <- NA
view(m2)
View(m2)
ks.test(m2$T_AGE)
shapiro.test(m2$T_AGE)
# p-value = 0.05205 로 0.05보다 크게나옴 > 정규분포
hist(m2$T_AGE)
describeBy(m2$T_AGE, m2$T_T_HTN)
library(psych)
describeBy(m2$T_AGE, m2$T_T_HTN)
describeBy(m2$T_AGE, m2$T_HTN)
#나이 비교하기
var.test(m2$T_AGE ~ T_HTN, data = m2 )
t.test(m2$T_AGE ~ T_HTN, data = m2, var.equal=T )
# 연령그룹 3개
m2<-m2 %>% mutate(age_gr3=ifelse(T_AGE < 50, 1,
ifelse(T_AGE >= 50 & T_AGE < 60, 2,
ifelse(T_AGE >= 60, 3, NA))))
library(gmodels) # CrossTable에 필요한 패키지
CrossTable(m2$age_gr3, m2$T_HTN)
library(descr) # freq에필요한 패키지
library(gmodels) # CrossTable에 필요한 패키지
CrossTable(m2$age_gr3, m2$T_HTN)
# 연령그룹 3개
m2<-m2 %>% mutate(age_gr3=ifelse(T_AGE < 50, 1,
ifelse(T_AGE >= 50 & T_AGE < 60, 2,
ifelse(T_AGE >= 60, 3, NA))))
library(descr) # freq에필요한 패키지
library(gmodels) # CrossTable에 필요한 패키지
CrossTable(m2$age_gr3, m2$T_HTN)
chisq.test(m2$age_gr3, m2$T_HTN)
m2<-m2 %>% mutate(age_gr3=ifelse(T_AGE < 50, 1,
ifelse(T_AGE >= 50 & T_AGE < 60, 2,
ifelse(T_AGE >= 60, 3, NA))))
library(descr) # freq에필요한 패키지
library(gmodels) # CrossTable에 필요한 패키지
CrossTable(m2$age_gr3, m2$T_HTN)
table(m2$age_gr3)
#나이 비교하기
var.test(T_AGE ~ T_HTN, data = m2 ) # p-value = 0.09973 라 0.05보다 커서 var.equal= T로 작성
t.test(T_AGE ~ T_HTN, data = m2, var.equal=T )
# 연령그룹 3개
m2<-m2 %>% mutate(age_gr3=ifelse(T_AGE < 50, 1,
ifelse(T_AGE >= 50 & T_AGE < 60, 2,
ifelse(T_AGE >= 60, 3, NA))))
# 연령그룹 3개
m2 <- m2 %>% mutate(age_gr3=ifelse(T_AGE < 50, 1,
ifelse(T_AGE >= 50 & T_AGE < 60, 2,
ifelse(T_AGE >= 60, 3, NA))))
library(dplyr)
m2 <- m2 %>% mutate(age_gr3=ifelse(T_AGE < 50, 1,
ifelse(T_AGE >= 50 & T_AGE < 60, 2,
ifelse(T_AGE >= 60, 3, NA))))
library(descr) # freq에필요한 패키지
library(gmodels) # CrossTable에 필요한 패키지
CrossTable(m2$age_gr3, m2$T_HTN)
chisq.test(m2$age_gr3, m2$T_HTN)
m2<-m2 %>% mutate(inc_gr3=ifelse(T_INCOME < 5, 1,
ifelse(T_INCOME == 5 | T_INCOME == 6, 2,
ifelse(7<= T_INCOME & T_INCOME <= 8, 3, NA))))
table(m2$inc_gr3)
CrossTable(m2$inc_gr3, m2$T_HTN)
#나이 정규분포 확인 (대상자가 많을떼 shapiro를써서 정규분포로 씀)
shapiro.test(m2$T_BMI)
# p-value = p-value = 3.505e-05 로 0.05보다 작게나옴 > 정규분포
hist(m2$T_BMI)
describeBy(m2$BMI, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
library(psych)
describeBy(m2$BMI, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
describeBy(m2$T_BMI, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
var.test(T_BMI ~ T_HTN, data = m2 ) # p-value = 0.09973 라 0.05보다 커서 var.equal= T로 작성
t.test(T_BMI ~ T_HTN, data = m2, var.equal=T )
var.test(T_BMI ~ T_HTN, data = m2 ) # p-value = 0.3327 라 0.05보다 커서 var.equal= T로 작성
t.test(T_BMI ~ T_HTN, data = m2, var.equal=T )
dm<-dm %>% mutate(bmi_gr=ifelse(T_BMI <23, 1,
ifelse(T_BMI >= 23 & T_BMI < 25, 2,
ifelse(T_BMI >= 25, 3, NA)))))
dm<-dm %>% mutate(bmi_gr=ifelse(T_BMI <23, 1,
ifelse(T_BMI >= 23 & T_BMI < 25, 2,
ifelse(T_BMI >= 25, 3, NA))))
m2<-m2 %>% mutate(bmi_gr=ifelse(T_BMI <23, 1,
ifelse(T_BMI >= 23 & T_BMI < 25, 2,
ifelse(T_BMI >= 25, 3, NA))))
m2<-m2 %>% mutate(bmi_gr3=ifelse(T_BMI <23, 1,
ifelse(T_BMI >= 23 & T_BMI < 25, 2,
ifelse(T_BMI >= 25, 3, NA))))
table(m2$bmi_gr3)
CrossTable(m2$bmi_gr3, m2$T_HTN)
dm %>% filter(T_DM==1) %>% summarize(quantile(T_BMI, na.rm = T))
m2 %>% filter(T_DM==1) %>% summarize(quantile(T_BMI, na.rm = T))
# 그룹별 사분범위 확인 49, 84, 90, 98, 296 에서 중앙값 90을 두고, 90(84-98)작성
dm %>% filter(T_DM==2) %>% summarize(quantile(T_BMI, na.rm = T))
# 그룹별 사분범위 확인 49, 84, 90, 98, 296 에서 중앙값 90을 두고, 90(84-98)작성
m2 %>% filter(T_DM==2) %>% summarize(quantile(T_BMI, na.rm = T))
m2 %>% filter(T_DM==2) %>% summarize(quantile(T_BMI, na.rm = T))
m2 %>% filter(T_DM==2) %>% summarize(quantile(T_BMI, na.rm = T))
# 그룹별 사분범위 확인
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_BMI, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_BMI, na.rm = T))
wilcox.test(T_BMI ~ T_HTN, data=dm)# p-value < 2.2e-16 읽고, 작으니 < 0.0001작성
wilcox.test(T_BMI ~ T_HTN, data=m2)# p-value < 2.2e-16 읽고, 작으니 < 0.0001작성
# Weight
shapiro.test(m2$T_WEIGHT) # 정규성검사 ks.test 대신에 사용 왜? 자료가 커서
#정규성 검사 후 크면 t테스트 작으면 윌콕슨
# Weight
shapiro.test(m2$T_WEIGHT) # 정규성검사 ks.test 대신에 사용 왜? 자료가 커서
# p-value = 0.001469 로 0.05보다 작게나옴 > 윌콕슨검사
hist(m2$T_WEIGHT)
describeBy(m2$T_WEIGHT, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
# p-value = 0.001469 로 0.05보다 작게나옴 > 윌콕슨검사
hist(m2$T_WEIGHT)
m2 %>% filter(T_WEIGHT==1) %>% summarize(quantile(T_WEIGHT, na.rm = T))
m2 %>% filter(T_WEIGHT==2) %>% summarize(quantile(T_WEIGHT, na.rm = T))
#정규성 검사 후 크면 t테스트 작으면 윌콕슨
# Weight
shapiro.test(m2$T_WEIGHT) # 정규성검사 ks.test 대신에 사용 왜? 자료가 커서
# p-value = 0.001469 로 0.05보다 작게나옴 > 윌콕슨검사
hist(m2$T_WEIGHT)
describeBy(m2$T_WEIGHT, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_WEIGHT, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_WEIGHT, na.rm = T))
wilcox.test(T_WEIGHT ~ T_HTN, data=m2)
wilcox.test(T_WEIGHT ~ T_HTN, data=m2)
chisq.test(m2$bmi_gr3, m2$T_HTN)
chisq.test(m2$age_gr3, m2$T_HTN)
CrossTable(m2$T_EXER, m2$T_HTN)
chisq.test(m2$T_EXER, m2$T_HTN)
wilcox.test(T_WEIGHT ~ T_HTN, data=m2)
chisq.test(m2$inc_gr3, m2$T_HTN)
#SBP
shapiro.test(m2$T_SBP) # p-value = 3.505e-05 로 0.05보다 작게나옴
hist(m2$T_SBP)
describeBy(m2$T_SBP, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
#나머지는 애초에 범주형이라 그냥..
freq(dm$T_EXER)
m2<-m2 %>% mutate(sbp_gr3=ifelse(T_SBP <130, 1,
ifelse(T_SBP >= 130,2, NA))))
m2<-m2 %>% mutate(sbp_gr3=ifelse(T_SBP <130, 1,
ifelse(T_SBP >= 130,2, NA)))
table(m2$sbp_gr3)
CrossTable(m2$sbp_gr3, m2$T_HTN)
chisq.test(m2$sbp_gr3, m2$T_HTN) # 범주형 시작시 적는 p-value = 0.001625
m2<-m2 %>% mutate(dbp_gr3=ifelse(T_DBP <90, 1,
ifelse(T_DBP >= 90,2, NA)))
table(m2$dbp_gr3)
source("~/.active-rstudio-document", echo=TRUE)
CrossTable(m2$dbp_gr3, m2$T_HTN)
chisq.test(m2$dbp_gr3, m2$T_HTN) # 범주형 시작시 적는 p-value = 0.001625
chisq.test(m2$sbp_gr3, m2$T_HTN) # 범주형 시작시 적는 p-value = 0.001625
#Pulse
shapiro.test(m2$T_PULSE)
# p-value = 0.1324 로 0.05보다 크게나옴 > 정규분포
hist(m2$T_PULSE)
describeBy(m2$T_PULSE, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
#나이 비교하기
var.test(T_PULSE ~ T_HTN, data = m2 ) # p-value = 0.09973 라 0.05보다 커서 var.equal= T로 작성
t.test(T_PULSE ~ T_HTN, data = m2, var.equal=T )
var.test(T_PULSE ~ T_HTN, data = m2 ) # p-value = 0.124 라 0.05보다 커서 var.equal= T로 작성
t.test(T_PULSE ~ T_HTN, data = m2, var.equal=T ) # p-value = 0.3776
# Menopause
CrossTable(m2$T_MNSAG, m2$T_HTN)
var.test(T_PULSE ~ T_HTN, data = m2 ) # p-value = 0.124 라 0.05보다 커서 var.equal= T로 작성
t.test(T_PULSE ~ T_HTN, data = m2, var.equal=T ) # p-value = 0.3776
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_PULSE, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_PULSE, na.rm = T))
t.test(T_PULSE ~ T_HTN, data = m2, var.equal=T ) # p-value = 0.3776
describeBy(m2$T_PULSE, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
#Waist
shapiro.test(m2$T_WAIST) # p-value = 0.1324 로 0.05보다 크게나옴 > 정규분포
describeBy(m2$T_WAIST, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
shapiro.test(m2$T_HIP) # p-value = 0.05538 로 0.05보다 크게나옴 > 정규분포 > t
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_HIP, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_HIP, na.rm = T))
wilcox.test(T_HIP ~ T_HTN, data=m2)
#Glucose
shapiro.test(m2$T_GLU0) # p-value = 0.003769 로 0.05보다 작게나옴 > 윌콕슨
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_GLU0, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_GLU0, na.rm = T))
wilcox.test(T_GLU0 ~ T_HTN, data=m2) # p-value = 0.0522
wilcox.test(T_HIP ~ T_HTN, data=m2) # p-value = 0.0522
#Triglyceride
shapiro.test(m2$T_TG) # 1.686e-12 로 0.05보다 작게나옴 > 윌콕슨
#Triglyceride
shapiro.test(m2$T_TG) # 1.686e-12 로 0.05보다 작게나옴 > 윌콕슨
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_TG, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_TG, na.rm = T))
wilcox.test(T_TG ~ T_HTN, data=m2) # p-value = 0.01194
#Age at menarche T_MNSAG
shapiro.test(m2$T_MNSAG) # 1.686e-12 로 0.05보다 작게나옴 > 윌콕슨
wilcox.test(T_MNSAG ~ T_HTN, data=m2) # p-value = 0.01194
# Menopause T_PMYN
CrossTable(m2$T_PMYN, m2$T_HTN)
chisq.test(m2$T_PMYN, m2$T_HTN)
#Triglyceride
shapiro.test(m2$T_TG) # p-value < 2.2e-16 로 0.05보다 작게나옴 > 윌콕슨
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_TG, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_TG, na.rm = T))
#Age at menarche T_MNSAG
shapiro.test(m2$T_MNSAG) # p-value = 2.071e-09 로 0.05보다 작게나옴 > 윌콕슨
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_MNSAG, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_MNSAG, na.rm = T))
# Menopause T_PMYN
CrossTable(m2$T_PMYN, m2$T_HTN)
chisq.test(m2$T_PMYN, m2$T_HTN) # p-value = 0.001931
#Glucose
shapiro.test(m2$T_GLU0) # 1.686e-12 로 0.05보다 작게나옴 > 윌콕슨
wilcox.test(T_GLU0 ~ T_HTN, data=m2) # p-value = 0.01194
#ICOME
shapiro.test(m2$T_INCOME)
wilcox.test(T_WEIGHT ~ T_HTN, data=m2)
t.test(T_PULSE ~ T_HTN, data = m2, var.equal=T ) # p-value = 0.3776
t.test(T_WAIST ~ T_HTN, data = m2, var.equal=T ) # p-value = 0.3776
var.test(T_WAIST ~ T_HTN, data = m2 ) # p-value = 0.124 라 0.05보다 커서 var.equal= T로 작성
wilcox.test(T_HIP ~ T_HTN, data=m2) # p-value = 0.0522
wilcox.test(T_GLU0 ~ T_HTN, data=m2) # p-value = 0.01194
wilcox.test(T_TG ~ T_HTN, data=m2) # p-value = 0.01194
#Age at menarche T_MNSAG
shapiro.test(m2$T_MNSAG) # p-value = 2.071e-09 로 0.05보다 작게나옴 > 윌콕슨
wilcox.test(T_MNSAG ~ T_HTN, data=m2) # p-value = 0.09224
t.test(T_PULSE ~ T_HTN, data = m2, var.equal=T ) # p-value = 0.3776
#SBP
shapiro.test(m2$T_T_SBP)
#SBP
shapiro.test(m2$T_SBP)
hist(m2$T_SBP)
describeBy(m2$T_SBP, m2$T_HTN)
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_SBP, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_SBP, na.rm = T))
#DBP
shapiro.test(m2$T_DBP)# p-value = 0.0001145
hist(m2$T_DBP)
m2 %>% filter(T_HTN==1) %>% summarize(quantile(T_DBP, na.rm = T))
m2 %>% filter(T_HTN==2) %>% summarize(quantile(T_DBP, na.rm = T))
wilcox.test(T_SBP ~ T_HTN, data=m2)
wilcox.test(T_DBP ~ T_HTN, data=m2)
#성별확인
freq(m2$T_SEX)
#결측확인
summary(m2$T_GLO0)
table(m2$T_INCOME) #9999만있어서 99999만 결측처리
describeBy(m2$T_AGE, m2$T_HTN) # 자료요약 하면서 mean,sd 찾아서 표에 넣어라
#성별확인
freq(m2$T_SEX)
#결측확인
summary(m2$T_GLO0)
table(m2$T_INCOME) #9999만있어서 99999만 결측처리
freq(m2$T_HTN)
